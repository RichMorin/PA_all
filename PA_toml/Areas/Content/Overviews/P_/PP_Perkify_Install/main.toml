# con_ove|PP_Perkify_Install/main.toml

[ meta ]

  actions     = 'publish'
  id_str      = 'PP_Perkify_Install'
  title       = 'Perkify - Install'

[ meta.refs ]

  f_authors   = 'cat_peo|Rich_Morin'
  f_editors   = 'cat_peo|Rich_Morin'

[ about ]

  precis      = 'installation notes for Vagrant-based Perkify'

  verbose     = '''
The [Vagrant]{ext_wp|Vagrant_(software)}-based version
of [Perkify]{con_ove|PP_Perkify_Intro}
uses a [hypervisor]{ext_wp|Hypervisor}-based
virtual machine ([VM]{ext_wp|Virtual_machine}),
provided by [VirtualBox]{ext_wp|Virtual_Box}.
The [Rich_Morin/Perkify]{https://app.vagrantup.com/Rich_Morin/boxes/Perkify}
"box" is available from the Vagrant Cloud.
It should work on any personal computer that:

- has a 64-bit AMD/Intel ([x86_64]{ext_wp|X86-64}) architecture
- has several GB of memory and free disk space
- supports Vagrant and VirtualBox

### Prerequisites

Before you can use Perkify, you'll need to install VirtualBox and Vagrant.
These steps are typically performed using a web browser, in the following order:

- Install the appropriate distribution from the
  [Download VirtualBox]{https://www.virtualbox.org/wiki/Downloads} page.

- Install the appropriate distribution from the
  [Download Vagrant]{https://www.vagrantup.com/downloads.html} page.

### Directory Setup

To set up the Perkify's "project" directory,
you'll need to obtain our current "box version".
Browse to the
[Rich_Morin/Perkify]{https://app.vagrantup.com/Rich_Morin/boxes/Perkify} page
and scan for the current version string (e.g., "v0.1.6").
This will be the first (and highest) value displayed.
Don't try to download anything from this page,
but hang onto this string; you'll need it very soon!

*Note:*
Some of the following instructions are specific to [macOS]{ext_wp|MacOS};
please adapt them as necessary for use on [Linux]{ext_wp|Linux}
or [Microsoft Windows]{ext_wp|Microsoft_Windows}.
In particular, if the indicated prompt is a dollar sign (`$`),
we'll be talking to the host (e.g., macOS) operating system.

In a Terminal window, enter:

    $ mkdir ~/perkify                   # create a working directory
    $ cd ~/perkify                      # go to the working directory

Using the box version you obtained earlier (without the leading "v"!),
ask Vagrant to initialize the current directory:

    $ vagrant init Rich_Morin/Perkify --box-version 0.1.6

This will add a `.vagrant` directory,
which Vagrant will use for support code and machine image files.
It will also add a generic version of the
<code>[Vagrantfile]{https://www.vagrantup.com/docs/vagrantfile}</code>,
which will contain configuration information for the virtual machine.
This would be a good time to skim the `Vagrantfile`,
in order to get an idea of the possible options.

*Note:*
Don't modify this copy of the `Vagrantfile`,
lest your changes cause problems or get overwritten by an update.
If need be, you can augment (or even override) its settings.
For details, see [Perkify - Configuration]{con_ove|PP_Perkify_Config}.

### Installation

We're (finally) ready to run the `vagrant up` command.  This will:

- download the Perkify box from the Vagrant Cloud
- boot a (greatly enhanced) copy of [Ubuntu]{ext_wp|Ubuntu} Linux
- start up background tasks (e.g., a web server)

Because the Perkify box is several gigabytes in size,
the initial download may take a while (e.g., 30 minutes).
You might want to estimate the amount of time this will take.
If you don't know how fast your connection is,
run a [speed test]{https://www.speedtest.net}.
If your [download]{ext_wp|Download} speed is 20 Mbps,
5 GB (40 Gb) of image data will take about 34 minutes (2000 seconds).

Also, like many Vagrant commands, this will output a slew of messages.
I've submitted an enhancement request, asking for a `--quiet` mode,
but until this becomes available, you'll just have to endure the chatter.
All of that said, you can now ask Vagrant to start up a virtual machine:

    $ vagrant up
    ...

Eventually, the command should finish,
leaving you back at a command line prompt on the host machine:

    ...
    $

### Example Commands

*Note:*
The Perkify VM runs Ubuntu Linux (regardless of the OS on your host system),
so you may have to learn some new ways of doing things.
If you're used to macOS (or some other Linux variant),
be prepared for minor differences in command options.

Let's try out some example commands.
Use Vagrant to connect to the VM via Secure Shell ([SSH]{ext_wp|Secure_Shell}),
then inspect the running system:

    $ vagrant ssh                   # Connect to the VM via SSH.
    Welcome to Ubuntu 19.04 (GNU/Linux 5.0.0-17-generic x86_64)
    ...

    vagrant@perkify:~$ pwd          # Print the "working directory".
    /home/vagrant

    vagrant@perkify:~$ l            # What's in this directory?
    _base/  _sync/  bin/

    vagrant@perkify:~$ df -k        # Show some file system information.
    Filesystem  1K-blocks      Used  Available Use% Mounted on
    udev           467888         0     467888   0% /dev
    ...

    vagrant@perkify:~$ uname -v     # Describe the VM's kernel version.
    #18-Ubuntu SMP ...

    vagrant@perkify:~$ exit         # Terminate the SSH session.
    ...

    $ uname -v                      # Describe the host's kernel version.
    Darwin Kernel ...

At this point, the Perkify VM is still running.
So, you can run `vagrant ssh` again whenever you wish.
Indeed, you can have multiple SSH sessions going at the same time.
However, if you're done with the VM for the moment,
there are various ways to shut it down.
Normally, you'll want to use `vagrant suspend`:

- `vagrant destroy`   - halt the VM, removing all traces
- `vagrant halt`      - halt the VM; don't save the state
- `vagrant suspend`   - suspend the VM, saving the state

Because Vagrant has now downloaded the Perkify files,
starting up the VM will now be somewhat faster.
However, loading the machine image into memory and booting Ubuntu
will still take a couple of minutes.

    $ cd ~/perkify
    $ vagrant up
    ...

    $ vagrant ssh
    ...

    vagrant@perkify:~$ 

### Discussion

There really aren't many Vagrant commands that you'll use regularly.
Mostly, you'll be interacting with [Bash]{ext_wp|Bash_(Unix_shell)},
the Linux "shell".
That said, there are several commands you'll need to know about.
So, let's move on to the [Perkify - Usage]{con_ove|PP_Perkify_Usage} page.
'''

[ zoo ]

  snippets    = '...'
