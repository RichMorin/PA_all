# con_ove|PP_Perkify_Setup/main.toml

[ meta ]

  actions     = 'publish'
  id_str      = 'PP_Perkify_Setup'
  title       = "Perkify - Setup"

[ meta.refs ]

  f_authors   = 'cat_peo|Rich_Morin'
  f_editors   = 'cat_peo|Rich_Morin'

[ about ]

  precis      = "setup notes for Vagrant-based Perkify"

  verbose     = '''
The [Vagrant]{ext_wp|Vagrant_(software)}-based version of Perkify
contains a [hypervisor]{ext_wp|Hypervisor}-based
virtual machine ([VM]{ext_wp|Virtual_machine}).
The [Rich_Morin/Perkify]{https://app.vagrantup.com/Rich_Morin/boxes/Perkify}
"box" is available in the "Bento" area of the Vagrant Cloud.
It should work on any personal computer
that has a 64-bit AMD/Intel ([x86_64]{ext_wp|X86-64}) architecture
and supports [VirtualBox]{ext_wp|Virtual_Box}.

### Installation

Before you can use Perkify,
you'll need to install both VirtualBox and Vagrant.
These steps are typically performed using a web browser:

- Install the appropriate distribution from the
  [Download VirtualBox]{https://www.virtualbox.org/wiki/Downloads} page.

- Install the appropriate distribution from the
  [Download Vagrant]{https://www.vagrantup.com/downloads.html} page.

Now, you'll need to start up a copy of Vagrant.
(These commands are specific to [macOS]{ext_wp|MacOS};
modify them as appropriate for use on [Linux]{ext_wp|Linux}
or [Microsoft Windows]{ext_wp|Microsoft_Windows}.)
In a Terminal window, enter:

    $ mkdir ~/perkify; cd !$        # create and go to a working directory
    $ vagrant init bento/perkify    # create .vagrant and Vagrantfile
    $ vagrant up                    # download and boot the Perkify VM
    ...

The `.vagrant` directory contains support code and machine image files.
The <code>[Vagrantfile]{https://www.vagrantup.com/docs/vagrantfile}</code>
contains configuration information for the VM.
This would be a good time to skim the `Vagrantfile`,
in order to get an idea of the possible options.

*Note:*
Don't modify this `Vagrantfile`, lest your changes cause problems
or get overwritten by an update.
Instead, override its settings using a `Vagrantfile` that comes later in the
[load order]{https://www.vagrantup.com/docs/vagrantfile/#load-order-and-merging}.

After downloading the Perkify box from the Vagrant Cloud server,
Now, run the `vagrant up` command.  This will:

- download the Perkify box from the server
- boot the contained copy of [Ubuntu]{ext_wp|Ubuntu} Linux
- start up background tasks (e.g., servers)

This will take several minutes and output a slew of messages.  
Eventually, however, it should finish and leave you
back at a command line prompt on the host machine.

### Example Commands

*Note:*
The Perkify VM runs Ubuntu Linux (regardless of the OS on your host system),
so you may have to learn some new ways of doing things.
If you're used to macOS (or some other Linux variant),
be prepared for minor differences in command options.

Let's try out some example commands.
Use Vagrant to connect to the VM via Secure Shell ([SSH]{ext_wp|Secure_Shell}),
then inspect the running system:

    $ vagrant ssh                   # connect to the VM via SSH
    Welcome to Ubuntu 19.04 (GNU/Linux 5.0.0-17-generic x86_64)
    ...

    vagrant@perkify:~$ pwd          # show the current directory
    /home/vagrant

    vagrant@perkify:~$ uname -v     # show the VM kernel version
    #18-Ubuntu SMP ...

    vagrant@perkify:~$ df -k        # show file system info
    Filesystem  1K-blocks      Used  Available Use% Mounted on
    udev           467888         0     467888   0% /dev
    ...

    vagrant@perkify:~$ ps aux       # show process table info
    USER  PID %CPU %MEM    VSZ   RSS TTY  STAT START   TIME COMMAND
    root    1  0.0  0.7 100712  8028 ?    Ss   Aug19   0:12 /sbin/init
    ...

    vagrant@perkify:~$ logout       # terminate the SSH session
    ...

    $ uname -v                      # show the host kernel version
    Darwin Kernel ...

At this point, the Perkify VM is still running.
So, you can run `vagrant ssh` again whenever you wish.
Indeed, you can have multiple SSH sessions going at the same time.
However, if you're done with the VM for the moment,
there are various ways to shut it down.
Normally, you'll want to use `vagrant suspend`:

- `vagrant destroy`   - halt the VM, removing all traces
- `vagrant halt`      - halt the VM; don't save the state
- `vagrant suspend`   - suspend the VM, saving the state

Because Vagrant has now downloaded the Perkify files,
starting up the VM will now be somewhat faster.
However, loading the machine image into memory and booting Ubuntu
will still take a couple of minutes.

    $ cd ~/perkify
    $ vagrant up
    ...

    $ vagrant ssh
    ...

    vagrant@perkify:~$ 

There really aren't many Vagrant commands that you'll use regularly.
This [Cheat Sheet]{https://gist.github.com/wpscholar/a49594e2e2b918f4d0c4}
will tell you about most of them.
That said, let's move on to the [Perkify - Usage]{con_ove|PP_Perkify_Usage}
page.
'''

[ zoo ]

  snippets    = '...'
