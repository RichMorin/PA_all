# con_ove|PP_Perkian_Booting/main.toml

[ meta ]

  actions     = 'publish'
  id_str      = 'PP_Perkian_Booting'
  title       = "Perkian - Booting"

[ meta.refs ]

  f_authors   = 'cat_peo|Rich_Morin'
  f_editors   = 'cat_peo|Rich_Morin'

[ about ]

  precis      = "thoughts on the booting of Perkian systems"

  verbose     = '''
As discussed on the
[USB mass storage device boot]{https://www.raspberrypi.org/
documentation/hardware/raspberrypi/bootmodes/msd.md} page,
some [Raspberry Pi]{ext_wp|Raspberry_Pi} (aka RasPi) models
can boot from either the microSD card or a USB flash drive.
The [Perkian - Storage]{con_ove|PP_Perkian_Storage} page
speculates about ways that this capability could be used in a VOISS system.
However, it might be possible to go quite a bit further in this direction.

### Ancient History

Several years ago (2013),
[Christian Crawley]{https://www.makeuseof.com/tag/author/ccawley} wrote
[3 Ways to Boot Multiple OSes on a Raspberry Pi
]{https://www.makeuseof.com/tag/
  how-to-install-multiple-oses-on-a-single-sd-card-for-raspberry-pi}.
This article describes the following approaches:

1. Multiple Pi Operating Systems with NOOBS
2. Multi-boot Your Raspberry Pi with BerryBoot
3. Run Multiple Operating Systems on Your Pi with a HDD

Although several years have passed since this article was written,
the booting situation is still in flux.
For example, some RasPi models (e.g., 3B, 3B+) are said to
detect and boot USB flash drives from certain vendors.
However, I can't find any recent information on convenient approaches
for booting a RasPi from multiple devices, partitions, etc.

### Current Status

Both BerryBoot and NOOBS use a GUI-based approach,
which is very likely to be inaccessible to blind users.
However, both projects are open source,
so it might be possible to do something about this.
More critically, in terms of VOISS and similar systems,
they are much too powerful and complicated to be used by a casual user.

#### BerryBoot, et al

The [BerryBoot 2.0]{https://www.berryterminal.com/doku.php/berryboot} page
describes a rather fancy boot manager for the RasPi.
Indeed, it's said to be a "bootloader / universal operating system installer".
Although visible activity on this project has been sporadic,
the source code is available on [GitHub]{ext_gh|maxnet/berryboot}.

The [BerryTerminal]{https://www.berryterminal.com/doku.php} is a "thin client",
based on the work of the (sadly inactive)
[Linux Terminal Server Project]{http://www.ltsp.org}.
It uses BerryBoot for booting
and is built using [Buildroot]{https://buildroot.org}.
Again, the source code is available on [GitHub]{ext_gh|maxnet/berryterminal}.

#### NOOBS

The NOOBS [README]{ext_gh|raspberrypi/noobs/blob/master/README.md}
is a good starting point for reading about the project;
dig into the [GitHub repo]{ext_gh|raspberrypi/noobs}
if you really want details.
Happily, NOOBS is popular, supported, and under active development:

> New Out Of Box Software (NOOBS) is an easy operating system
installation manager for the Raspberry Pi. ...
The latest NOOBS release is v3.2.0, released on 10th July 2019.

> -- [NOOBS]{https://www.raspberrypi.org/documentation/installation/noobs.md}

Unhappily, there seems to be little interest in making NOOBS accessible.
Back in 2017, I posted an entry on the Raspberry Pi forum
([creating a blind-accessible multi-OS installation?
]{https://www.raspberrypi.org/forums/viewtopic.php?t=190997}).
It got a few responses, but nothing much seems to have happened as a result.
In September 2019, I tried a [search]{https://www.raspberrypi.org/forums/
search.php?keywords=NOOBS+accessibility} of the forum for "NOOBS accessibility".
It showed some entries from my thread, but no useful results.
I also scanned the [Assistive technology and accessibility
]{https://www.raspberrypi.org/forums/viewforum.php?f=102} subforum,
but didn't find anything particularly relevant.

### Multi-boot

Let's look into the RasPi system architecture, in an attempt
to understand how best to support accessible multi-boot capability.

#### `config.txt`

> The Raspberry Pi uses a configuration file instead of the BIOS
you would expect to find on a conventional PC.
The system configuration parameters,
which would traditionally be edited and stored using a BIOS,
are stored instead in an optional text file named `config.txt`.
This is read by the GPU before the ARM CPU and Linux are initialised. ...

> [$url]{https://www.raspberrypi.org/documentation/configuration/config-txt}

According to the page [Boot options in config.txt
]{https://www.raspberrypi.org/documentation/configuration/config-txt/boot.md},
this file contains aboiut 20 options.
However, none of these appear to affect the choice of the boot device.


### Nerves

Taking an entirely different approach to the problem,
a [Nerves]{https://nerves-project.org} system
(on either a microSD card or a USB flash drive)
might be able to act as a boot manager.
Like the BerryTerminal, Nerves is based on [Buildroot]{https://buildroot.org}.
However, it uses [Elixir]{ext_wp|Elixir_(programming_language)}
and the [Erlang]{ext_wp|Erlang_(programming_language)} infrastructure
to provide robust, fail-soft performance.

For example, Nerves supports a novel approach to "ping/pong" dual booting.
This allows developers to try out a new Nerves system
without destroying the old one.
However, it would also let a VOISS user try out a "new and improved"
boot manager and retreat to the previous version if it causes problems.

Nerves applications boot quickly (typically in a few seconds).
Once a Nerves-based boot manager is running,
it could scan for boot devices, listen for keypresses, etc.
Using Nerves, to support a multi-lingual voice output interface
wouldn't be practical, but may also be unnecessary.
A simple user interface, using only the keyboard and headphones,
might well suffice.

In short, a lot of interesting and possibly relevant work
has already been done in the Nerves community.
The next step is to figure out what a simple boot manager should do,
how it should interact with the user, etc.
 
 Boot options in config.txt
 https://www.raspberrypi.org/documentation/configuration/config-txt/boot.md
 
 
 
 
To be continued ...
'''

[ zoo ]

  snippets    = '...'
